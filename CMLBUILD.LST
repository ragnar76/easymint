> FUNCTION program_cml_build$(cml$)
LOCAL pos&,par$,newcml$
LET pos&=INSTR(cml$,CHR$(0))
IF pos&=0
  LET newcml$=cml$
ELSE
  REPEAT
    LET par$=LEFT$(cml$,PRED(pos&))
    LET cml$=MID$(cml$,SUCC(pos&))
    IF LEN(par$)=0
      LET par$="' '"
    ELSE IF INSTR(par$," ")>0
      LET pos&=LEN(par$)
      WHILE pos&>0
        IF MID$(par$,pos&,1)="'"
          LET par$=LEFT$(par$,pos&)+MID$(par$,pos&)
        ENDIF
        DEC pos&
      WEND
      LET par$="'"+par$+"'"
    ENDIF
    LET newcml$=newcml$+par$
    IF LEN(cml$)>0
      LET newcml$=newcml$+" "
    ENDIF
    LET pos&=INSTR(cml$,CHR$(0))
  UNTIL pos&=0
ENDIF
RETURN newcml$
ENDFUNC
> FUNCTION program_cml_unbuild$(cml$)
LOCAL newcml$,pos&,len&,space!,quote!,char$
IF INSTR(cml$,CHR$(0))=0
LET pos&=1
LET len&=LEN(cml$)
LET space!=TRUE
WHILE pos&<=len&
  LET char$=MID$(cml$,pos&,1)
  SELECT char$
  CASE " "
    IF quote!
      LET newcml$=newcml$+" "
    ELSE
      IF NOT space!
        LET newcml$=newcml$+CHR$(0)
      ENDIF
      LET space!=TRUE
    ENDIF
  CASE "'"
    IF quote!
      IF MID$(cml$,pos&,2)="''"
        LET newcml$=newcml$+"'"
        INC pos&
      ELSE
        LET quote!=FALSE
      ENDIF
    ELSE
      IF space!
        IF MID$(cml$,pos&,3)="' '"
          LET newcml$=newcml$+CHR$(0)
          ADD pos&,2
        ELSE
          LET quote!=TRUE
          CLR space!
        ENDIF
      ELSE
        LET newcml$=newcml$+"'"
      ENDIF
    ENDIF
  DEFAULT
    LET newcml$=newcml$+char$
    LET space!=FALSE
  ENDSELECT
  INC pos&
WEND
RETURN newcml$+CHR$(0)
ELSE
RETURN cml$
ENDIF
ENDFUNC
