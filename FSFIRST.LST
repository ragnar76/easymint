FUNCTION my_fsfirst(datei$,attr&,next!)
  $F%
  ' Der Ersatz zu FSFIRST(). Achtung: Der zusÑtzliche Parameter (next!) muû
  ' auf TRUE gesetzt werden, wenn anschlieûend my_fsnext() aufgerufen wird.
  ' Wird my_fsfirst() nur einmalig aufgerufen (z.B. zur ExistenzprÅfung), so
  ' ist next! auf FALSE zu setzen!
  '
  LOCAL all_names!
  LOCAL match_name!
  LOCAL attrib&
  LOCAL fehler%
  LOCAL bufdatei$
  LOCAL dateiname$
  LOCAL path$
  '
  @chk_dirhandle
  '
  @pfad(datei$,path$)
  '
  IF domain&=1                                  ! Nur wenn wir uns auch in der
    gl_dirhandle%=@dopendir(path$,0)            ! MiNT-Domain befinden îffnen.
  ELSE
    gl_dirhandle%=einvfn%                       ! Normales FSFIRST/FSNEXT provozieren
  ENDIF
  '
  IF gl_dirhandle%=einvfn%                      ! (-32) Kein passendes Filesystem
    gl_dirhandle%=0                             ! oder nicht in der MiNT-Domain
    '
    gl_xattr_d_attrib%=ADD(gl_xattrbuf%,&H15)   ! Zum vereinfachten Zugriff auf
    gl_xattr_d_time%=ADD(gl_xattrbuf%,&H16)     ! die DTA (hier werden die Ergebnisse
    gl_xattr_d_date%=ADD(gl_xattrbuf%,&H18)     ! der Funktion eingetragen) werden
    gl_xattr_d_length%=ADD(gl_xattrbuf%,&H1A)   ! einige globale Variablen mit den
    gl_xattr_d_fname%=ADD(gl_xattrbuf%,&H1E)    ! Struktur-Adressen belegt.
    '
    ~FSETDTA(gl_xattrbuf%)                      ! DTA setzen
    '
    RETURN FSFIRST(datei$,attr&)
    '
  ELSE                                          ! In der MiNT-Domain:
    fehler%=gl_dirhandle%
    IF (SHR(gl_dirhandle%,24) AND &HFF)<>&HFF
      gl_xattr_d_attrib%=ADD(gl_xattrbuf%,&H29) ! Variablen belegen (siehe oben)
      gl_xattr_d_time%=ADD(gl_xattrbuf%,&H1C)
      gl_xattr_d_date%=ADD(gl_xattrbuf%,&H1E)
      gl_xattr_d_length%=ADD(gl_xattrbuf%,&H10)
      gl_xattr_d_fname%=ADD(gl_fnamebuf%,&H4)
      '
      @filename(datei$,dateiname$)              ! Datei extrahieren
      IF dateiname$="*.*" OR dateiname$="*"
        dateiname$="*"
        all_names!=-1
      ENDIF
      CHAR{gl_fnamebuf%}=""                     ! Struktur bereinigen
      '
      fehler%=@dreaddir(255,gl_dirhandle%,gl_fnamebuf%) ! Lesen
      '
      WHILE fehler%=0
        bufdatei$=CHAR{gl_xattr_d_fname%}       ! Die gefundene Datei
        IF all_names!                           ! Gesucht wurde *.*
          match_name!=TRUE
        ELSE
          match_name!=@match(UPPER$(bufdatei$),UPPER$(dateiname$))
        ENDIF
        IF match_name!=TRUE                     ! entspricht dem Suchkriterium
          datei$=path$+bufdatei$                ! Kompletter Zugriffspfad
          IF @fxattr(0,datei$,gl_xattrbuf%)=0
            attrib&=INT{PRED(gl_xattr_d_attrib%)}
            IF attrib&=0 AND (attr& AND fa_file&)=fa_file&
              attrib&=fa_file&
            ENDIF
            IF (attrib& AND attr&) OR attr&=0
              IF NOT next!                      ! Dem my_fsfirst() folgt kein
                ~@dclosedir(gl_dirhandle%)      ! my_fsnext(), also Verzeichnis
                CLR gl_dirhandle%               ! wieder schlieûen.
              ENDIF
              RETURN 0
            ENDIF
          ENDIF
        ENDIF
        fehler%=@dreaddir(255,gl_dirhandle%,gl_fnamebuf%)
      WEND
      ~@dclosedir(gl_dirhandle%)
    ENDIF
  ENDIF
  '
  CLR gl_dirhandle%
  RETURN fehler%
  '
ENDFUNC
FUNCTION my_fsnext(datei$,attr&)
  $F%
  ' Der Ersatz zu FSNEXT().
  '
  LOCAL all_names!
  LOCAL match_name!
  LOCAL attrib&
  LOCAL fehler%
  LOCAL bufdatei$
  LOCAL dateiname$
  LOCAL path$
  '
  IF gl_dirhandle%                              ! Aufruf erfolgte aus MiNT-Domain
    '
    @pfad(datei$,path$)                         ! Pfad extrahieren
    @filename(datei$,dateiname$)                ! Dateiname extrahieren
    IF dateiname$="*.*" OR dateiname$="*"
      dateiname$="*"
      all_names!=TRUE
    ENDIF
    '
    CHAR{gl_fnamebuf%}=""                       ! Struktur bereinigen
    fehler%=@dreaddir(255,gl_dirhandle%,gl_fnamebuf%)   ! Lesen
    WHILE fehler%=0
      bufdatei$=CHAR{gl_xattr_d_fname%}
      IF all_names!                             ! Gesucht wurde *.*
        match_name!=TRUE
      ELSE
        match_name!=@match(UPPER$(bufdatei$),UPPER$(dateiname$))
      ENDIF
      IF match_name!=TRUE                       ! entspricht dem Suchkriterium
        datei$=path$+bufdatei$                  ! Kompletter Zugriffspfad
        IF @fxattr(0,datei$,gl_xattrbuf%)=0
          attrib&=INT{PRED(gl_xattr_d_attrib%)}
          IF attrib&=0 AND (attr& AND &H27)=&H27
            attrib&=&H27
          ENDIF
          IF (attrib& AND attr&) OR attr&=0
            RETURN 0
          ENDIF
        ENDIF
      ENDIF
      fehler%=@dreaddir(255,gl_dirhandle%,gl_fnamebuf%)
    WEND
    ~@dclosedir(gl_dirhandle%)
    CLR gl_dirhandle%
    RETURN fehler%
  ELSE IF gl_has_dopendir!
    RETURN enmfil%          ! -49
    '
  ELSE                                          ! Aufruf erfolgte aus TOS-Domain
    RETURN FSNEXT()
  ENDIF
  '
ENDFUNC
